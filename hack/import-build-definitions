#!/bin/bash -e
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
[ -x $SCRIPTDIR/configure ] && source $SCRIPTDIR/configure

# Import build definition tasks from build-definitions repo
# Only imports the 3 tasks that are still maintained in build-definitions:
# - init
# - git-clone
# - summary
# All other tasks and pipelines are now maintained locally in this repo

if [ -z "$BUILD_DEFINITIONS" ]; then
    BUILD_DEFINITIONS="${1:-$HOME/dev/build-definitions}"
fi
DEFAULT_EXPORT=$(realpath $SCRIPTDIR/../pac)
if [ -z "$EXPORT_DIR" ]; then
    EXPORT_DIR="${2:-$DEFAULT_EXPORT}"
fi

echo "Import Tasks From $BUILD_DEFINITIONS"
echo "Copy Tasks Into $EXPORT_DIR/tasks"

IMPORT_TASKS_DIR=${BUILD_DEFINITIONS}/task
OUTPUT_TASKS_DIR=$EXPORT_DIR/tasks
OUTPUT_PIPELINES_DIR=$EXPORT_DIR/pipelines

# Create tasks directory if it doesn't exist
mkdir -p $OUTPUT_TASKS_DIR

# Only sync these 3 tasks from build-definitions
TASKS_TO_SYNC="init git-clone summary"

RUNNER_IMAGE='quay.io/redhat-appstudio/rhtap-task-runner:latest'

echo
echo "Syncing tasks from build-definitions:"
for task in $TASKS_TO_SYNC
do
  echo " $task in $task.yaml"

  # Find the latest version directory for this task
  VERSIONDIR=$(ls -d $IMPORT_TASKS_DIR/$task/*/ | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n | tail -n1)

  if [ -f $VERSIONDIR/$task.yaml ]; then
    cp $VERSIONDIR/$task.yaml $OUTPUT_TASKS_DIR/$task.yaml
  elif [ -f $VERSIONDIR/kustomization.yaml ]; then
    kustomize build $VERSIONDIR > $OUTPUT_TASKS_DIR/$task.yaml
  else
    echo "ERROR: Unable to find task definition in $VERSIONDIR"
    exit 1
  fi

  # Change all the Tasks to use the RHADS-ssc runner image. The image reference is by tag which
  # helps pushing out fixes. For this reason, the image pull policy is also configured to always
  # check for the availability of a new image.
  yq -i \
      '.spec.steps[] *= {"image": "'${RUNNER_IMAGE}'","imagePullPolicy":"Always"}' \
      "${OUTPUT_TASKS_DIR}/${task}.yaml"
done

echo
echo "update-pipelinerun-imports"
bash $SCRIPTDIR/update-pipelinerun-imports
bash $SCRIPTDIR/patch-tasks

echo 'ensure consistent formatting'
tasks=("${OUTPUT_TASKS_DIR}"/*.yaml)
pipelines=("${OUTPUT_PIPELINES_DIR}"/*.yaml)
all=( "${tasks[@]}" "${pipelines[@]}")
for f in "${all[@]}"; do
    yq -i --prettyPrint --indent=2 '.' "${f}"
done

